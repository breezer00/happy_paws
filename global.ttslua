#include lib/utils
#include lib/log_utils
#include lib/shared_def

--------------------------------------------------------------------------------
-- Determines whether we have an item card with victory point entering or leaving
-- a HandTrigger zone.
--
-- @param zone Zone the Object `object` is entering.
-- @param object Object entering Zone `zone`.
--------------------------------------------------------------------------------
function isVpItemCardEnterOrLeaveHandZone(zone, object)
  local vp_item_cards_GUID = {"ac4b0a", "af377f", "e7b2a3"}
  return object.type == "Card" and zone.name == "HandTrigger" and
         utils.hasValue(vp_item_cards_GUID, object.getGUID())
end

--------------------------------------------------------------------------------
-- Retruns true iff a pee token has entered or left tree spots.
--
--
-- @param zone Zone the Object `object` is entering or leaving.
-- @param object Object entering or leaving Zone `zone`.
--------------------------------------------------------------------------------
function isPeeTokenEnterOrLeaveTreeSpot(zone, object)
  local tree_spots_GUID = {"93db86", "89ae2f", "379e75", "c0be56", "9deec7"}
  if utils.hasValue(tree_spots_GUID, zone.getGUID()) and
      utils.strEndsWith(object.getName(), " Token") then
    return true
  end
  return false
end

--------------------------------------------------------------------------------
-- Returns player color given a pee token. A pee token is a token with name
-- ending in " Token"
--
-- @param pee_token An Object that may or may not be a pee token.
--------------------------------------------------------------------------------
function getPlayerColorFromPeeToken(pee_token)
  if not utils.strEndsWith(pee_token.getName(), " Token") then
    log_utils.error("Invalid token.")
    return
  end
  return string.lower(utils.strSplit(pee_token.getName(), ' ')[1])
end

--------------------------------------------------------------------------------
-- Updates player victory points by `val`, `val` could be positive or negative.
--
-- @param player_color Player color.
-- @param val Value to update the victory points with.
--------------------------------------------------------------------------------
function updatePlayerVp(player_color, val)
  player_color = string.lower(player_color)
  vp = getObjectFromGUID(shared_def.player_color_to_vp_GUID[player_color])
  if vp ~= nil then
    vp.setValue(vp.getValue() + val)
  end
end

--------------------------------------------------------------------------------
-- Returns true iff an achievement card enters a player's achievement zone.
--
-- @param zone Zone the Object `object` is entering or leaving.
-- @param object Object entering or leaving Zone `zone`.
--------------------------------------------------------------------------------
function isAchievementCardEnterOrLeaveAchievementZone(zone, object)
  local achievement_card_GUIDs = {"e85c94", "a8ce27", "a5d2f1", "dd65d6",
                                  "da2d81", "299289", "5bcd71",
                                  "ba30d2", "eed61a", "89446f", "eba4d0"}
  local achievement_zone_GUIDs = {"41a12a", "bb5562", "f21455", "464320",
                                  "3c2c53"}
  if utils.hasValue(achievement_zone_GUIDs, zone.getGUID()) and
      utils.hasValue(achievement_card_GUIDs, object.getGUID()) then
    return true
  end
end

--------------------------------------------------------------------------------
-- Returns player color corresponding to the achievement zone.
--
-- @param zone An achievement zone.
--------------------------------------------------------------------------------
function getAchievementZonePlayerColor(zone)
  local achievement_zone_GUID_to_player_color = {}
  achievement_zone_GUID_to_player_color["41a12a"] = "red"
  achievement_zone_GUID_to_player_color["bb5562"] = "white"
  achievement_zone_GUID_to_player_color["f21455"] = "yellow"
  achievement_zone_GUID_to_player_color["464320"] = "blue"
  achievement_zone_GUID_to_player_color["3c2c53"] = "green"
  return achievement_zone_GUID_to_player_color[zone.getGUID()]
end

--------------------------------------------------------------------------------
-- Returns vitory points corresponding to the achievement card.
--
-- @param achievement_card An achievement card.
--------------------------------------------------------------------------------
function getVpFromAchievementCard(achievement_card)
  local achievement_GUID_to_vp = {}
  achievement_GUID_to_vp["eed61a"] = 1 -- Unbreakable Friendship
  achievement_GUID_to_vp["89446f"] = 1 -- Unbreakable Friendship
  achievement_GUID_to_vp["e85c94"] = 1 -- Dog Lover
  achievement_GUID_to_vp["a5d2f1"] = 1 -- Environmentalist
  achievement_GUID_to_vp["eba4d0"] = 2 -- Friendly Dog
  achievement_GUID_to_vp["a8ce27"] = 2 -- Service Dog
  achievement_GUID_to_vp["dd65d6"] = 2 -- Dog Idol
  achievement_GUID_to_vp["da2d81"] = 2 -- Collector
  achievement_GUID_to_vp["299289"] = 2 -- Careless Parents
  achievement_GUID_to_vp["5bcd71"] = 2 -- King/Queen of Dog Park
  achievement_GUID_to_vp["ba30d2"] = 2 -- Poor Dog
  return achievement_GUID_to_vp[achievement_card.getGUID()]
end

--------------------------------------------------------------------------------
--
-- Predefined event handlers.
--
--------------------------------------------------------------------------------

function onObjectEnterZone(zone, object)
  if isPeeTokenEnterOrLeaveTreeSpot(zone, object) then
    updatePlayerVp(getPlayerColorFromPeeToken(object), 1)
    return
  end

  if isAchievementCardEnterOrLeaveAchievementZone(zone, object) then
    updatePlayerVp(getAchievementZonePlayerColor(zone),
                   getVpFromAchievementCard(object))
    return
  end

  if isVpItemCardEnterOrLeaveHandZone(zone, object) then
    updatePlayerVp(zone.getValue(), 1)
  end
end

function onObjectLeaveZone(zone, object)
  if isPeeTokenEnterOrLeaveTreeSpot(zone, object) then
    updatePlayerVp(getPlayerColorFromPeeToken(object), -1)
    return
  end

  if isAchievementCardEnterOrLeaveAchievementZone(zone, object) then
    updatePlayerVp(getAchievementZonePlayerColor(zone),
                   -getVpFromAchievementCard(object))
    return
  end

  if isVpItemCardEnterOrLeaveHandZone(zone, object) then
    updatePlayerVp(zone.getValue(), -1)
  end
end
