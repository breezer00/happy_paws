#include log_utils

checkbox = {}

--------------------------------------------------------------------------------
-- Toggles a checkbox. A checkbox is a 3D text that always starts with "[ ]" or
-- "[x]", representing "not checked" and "checked" respectively. If vp_GUID is
-- provided, when the box becomes checked, victory points counter with GUID
-- `vp_GUID` is incremented; when the box becomes unchecked, victory points
-- counter with GUID `vp_GUID` is decremented.
--
-- @param checkbox_GUID GUID of the checkbox to be toggled.
-- @param vp_GUID GUID GUID of the victory pointer counter to be updated.
--------------------------------------------------------------------------------
function checkbox.toggle(checkbox_GUID, vp_GUID)
  local text = getObjectFromGUID(checkbox_GUID)
  local text_val = text.getValue()

  -- Sanity check to verify our checkbox format.
  if string.sub(text_val, 1, 1) ~= "[" or string.sub(text_val, 3, 3) ~= "]" or
      (string.sub(text_val, 2, 2) ~= "x" and
       string.sub(text_val, 2, 2) ~= " ") then
    log_utils.warn("Attempt not toggle non-checkbox item.")
    return
  end

  -- Toggle the checkbox, and update VP if required.
  if vp_GUID ~= nil then
    vp = getObjectFromGUID(vp_GUID)
  end

  local checked = string.sub(text_val, 2, 2) == "x"
  if checked then
    text.setValue(string.gsub(text_val, "x", " ", 1))
    if vp ~= nil then
      vp.setValue(vp.getValue() - 1)
    end
  else
    text.setValue(string.gsub(text_val, " ", "x", 1))
    if vp ~= nil then
      vp.setValue(vp.getValue() + 1)
    end
  end
end
