#include deck

item_deck = {}
local item_deck_GUID_cache = nil
local ITEM_DECK_ZONE_GUID = "c0a960"

--------------------------------------------------------------------------------
-- Finds the item deck GUID dynamically.
--------------------------------------------------------------------------------
function item_deck.getItemDeckGUID()
  -- If the cached item deck GUID is still valid, return the cached GUID.
  if item_deck_GUID_cache ~= nil then
    local item_deck = getObjectFromGUID(item_deck_GUID_cache)
    if item_deck ~= nil and item_deck.type == "Deck" then
      log_utils.info("Existing item deck GUID ".. item_deck.guid)
      return item_deck_GUID_cache
    end
  end

  -- Cached item deck GUID is no longer valid, retrieve a new one and cache it.
  item_deck_GUID_cache = deck.getDeckFromZoneGUID(ITEM_DECK_ZONE_GUID)
  return item_deck_GUID_cache
end

--------------------------------------------------------------------------------
-- Returns the item deck position, which is defined to be the item deck zone
-- position.
--------------------------------------------------------------------------------
function item_deck.getItemDeckPosition()
  deck_zone = getObjectFromGUID(ITEM_DECK_ZONE_GUID)
  return deck_zone.getPosition()
end

--------------------------------------------------------------------------------
-- Draws a card from the item deck if available.
--
-- @param player_color Color of the player trying to draw the card.
-- @param card_prefix Unique identifier of a type of item cards. Item cards of
--        the same type are grouped by a unique prefix, for example, all dog
--        leash cards starts with the name "dog_leash_".
-- @param card_name A human readable string used for logging purposes.
--------------------------------------------------------------------------------
function item_deck.drawFromItemDeck(player_color, card_prefix, card_name)
  deck.drawFromDeck(player_color, item_deck.getItemDeckGUID(), card_prefix, card_name)
end

--------------------------------------------------------------------------------
-- Returns true if `obj` has tag "item_cards".
--
-- @param obj An object in the game.
--------------------------------------------------------------------------------
function item_deck.isItemCard(obj)
  return obj.hasTag("item_cards")
end
